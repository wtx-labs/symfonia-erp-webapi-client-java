/*
 * Symfonia WebAPI
 * Symfonia WebAPI - specyfikacja wybranych endpointow API systemu ERP Symfonia. Modele danych sa uproszczone i ograniczone do niektorych parametrow (wersja rozwojowa).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.symfonia.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.symfonia.api.client.invoker.JSON;

/**
 * ProductCriteriaFilter
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class ProductCriteriaFilter {
  public static final String SERIALIZED_NAME_CATALOG_ID = "CatalogId";
  @SerializedName(SERIALIZED_NAME_CATALOG_ID)
  @javax.annotation.Nullable
  private Integer catalogId;

  public static final String SERIALIZED_NAME_ACTIVE = "Active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  @javax.annotation.Nullable
  private Boolean active;

  public static final String SERIALIZED_NAME_BARCODE = "Barcode";
  @SerializedName(SERIALIZED_NAME_BARCODE)
  @javax.annotation.Nullable
  private String barcode;

  public static final String SERIALIZED_NAME_KIND_ID = "KindId";
  @SerializedName(SERIALIZED_NAME_KIND_ID)
  @javax.annotation.Nullable
  private Integer kindId;

  public ProductCriteriaFilter() {
  }

  public ProductCriteriaFilter catalogId(@javax.annotation.Nullable Integer catalogId) {
    this.catalogId = catalogId;
    return this;
  }

  /**
   * Kryterium wyszukiwania po id katalogu towaru. Jezeli wartosc bedzie pusta to kryterium wyszukiwania zostanie pominiete.
   * @return catalogId
   */
  @javax.annotation.Nullable
  public Integer getCatalogId() {
    return catalogId;
  }

  public void setCatalogId(@javax.annotation.Nullable Integer catalogId) {
    this.catalogId = catalogId;
  }


  public ProductCriteriaFilter active(@javax.annotation.Nullable Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Kryterium wyszukiwania po statusie aktywnosci towaru. Jezeli wartosc bedzie pusta to kryterium wyszukiwania zostanie pominiete.
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(@javax.annotation.Nullable Boolean active) {
    this.active = active;
  }


  public ProductCriteriaFilter barcode(@javax.annotation.Nullable String barcode) {
    this.barcode = barcode;
    return this;
  }

  /**
   * Kryterium wyszukiwania po kodzie paskowym towaru. Jezeli wartosc bedzie pusta to kryterium wyszukiwania zostanie pominiete.
   * @return barcode
   */
  @javax.annotation.Nullable
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(@javax.annotation.Nullable String barcode) {
    this.barcode = barcode;
  }


  public ProductCriteriaFilter kindId(@javax.annotation.Nullable Integer kindId) {
    this.kindId = kindId;
    return this;
  }

  /**
   * Kryterium wyszukiwania po id rodzaju towaru. Jezeli wartosc bedzie pusta to kryterium wyszukiwania zostanie pominiete.
   * @return kindId
   */
  @javax.annotation.Nullable
  public Integer getKindId() {
    return kindId;
  }

  public void setKindId(@javax.annotation.Nullable Integer kindId) {
    this.kindId = kindId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductCriteriaFilter productCriteriaFilter = (ProductCriteriaFilter) o;
    return Objects.equals(this.catalogId, productCriteriaFilter.catalogId) &&
        Objects.equals(this.active, productCriteriaFilter.active) &&
        Objects.equals(this.barcode, productCriteriaFilter.barcode) &&
        Objects.equals(this.kindId, productCriteriaFilter.kindId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(catalogId, active, barcode, kindId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductCriteriaFilter {\n");
    sb.append("    catalogId: ").append(toIndentedString(catalogId)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    kindId: ").append(toIndentedString(kindId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CatalogId");
    openapiFields.add("Active");
    openapiFields.add("Barcode");
    openapiFields.add("KindId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductCriteriaFilter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductCriteriaFilter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductCriteriaFilter is not found in the empty JSON string", ProductCriteriaFilter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductCriteriaFilter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductCriteriaFilter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Barcode") != null && !jsonObj.get("Barcode").isJsonNull()) && !jsonObj.get("Barcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Barcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Barcode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductCriteriaFilter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductCriteriaFilter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductCriteriaFilter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductCriteriaFilter.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductCriteriaFilter>() {
           @Override
           public void write(JsonWriter out, ProductCriteriaFilter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductCriteriaFilter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductCriteriaFilter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductCriteriaFilter
   * @throws IOException if the JSON string is invalid with respect to ProductCriteriaFilter
   */
  public static ProductCriteriaFilter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductCriteriaFilter.class);
  }

  /**
   * Convert an instance of ProductCriteriaFilter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

