/*
 * Symfonia WebAPI
 * Symfonia WebAPI - specyfikacja wybranych endpointow API systemu ERP Symfonia. Modele danych sa uproszczone i ograniczone do niektorych parametrow (wersja rozwojowa).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.symfonia.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.symfonia.api.client.invoker.JSON;

/**
 * SaleDocumentPosition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class SaleDocumentPosition {
  public static final String SERIALIZED_NAME_PRODUCT_ID = "ProductId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  @javax.annotation.Nullable
  private Integer productId;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "ProductCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  @javax.annotation.Nullable
  private String productCode;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_QUANTITY = "Quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  @javax.annotation.Nullable
  private Double quantity;

  public static final String SERIALIZED_NAME_PRICE_VALUE_P_L_N = "PriceValuePLN";
  @SerializedName(SERIALIZED_NAME_PRICE_VALUE_P_L_N)
  @javax.annotation.Nullable
  private Double priceValuePLN;

  public static final String SERIALIZED_NAME_PRICE_VALUE = "PriceValue";
  @SerializedName(SERIALIZED_NAME_PRICE_VALUE)
  @javax.annotation.Nullable
  private Double priceValue;

  public static final String SERIALIZED_NAME_NET_VALUE_P_L_N = "NetValuePLN";
  @SerializedName(SERIALIZED_NAME_NET_VALUE_P_L_N)
  @javax.annotation.Nullable
  private Double netValuePLN;

  public static final String SERIALIZED_NAME_NET_VALUE = "NetValue";
  @SerializedName(SERIALIZED_NAME_NET_VALUE)
  @javax.annotation.Nullable
  private Double netValue;

  public static final String SERIALIZED_NAME_VAT_VALUE_P_L_N = "VatValuePLN";
  @SerializedName(SERIALIZED_NAME_VAT_VALUE_P_L_N)
  @javax.annotation.Nullable
  private Double vatValuePLN;

  public static final String SERIALIZED_NAME_GROSS_VALUE = "GrossValue";
  @SerializedName(SERIALIZED_NAME_GROSS_VALUE)
  @javax.annotation.Nullable
  private Double grossValue;

  public SaleDocumentPosition() {
  }

  public SaleDocumentPosition productId(@javax.annotation.Nullable Integer productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @javax.annotation.Nullable
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(@javax.annotation.Nullable Integer productId) {
    this.productId = productId;
  }


  public SaleDocumentPosition productCode(@javax.annotation.Nullable String productCode) {
    this.productCode = productCode;
    return this;
  }

  /**
   * Get productCode
   * @return productCode
   */
  @javax.annotation.Nullable
  public String getProductCode() {
    return productCode;
  }

  public void setProductCode(@javax.annotation.Nullable String productCode) {
    this.productCode = productCode;
  }


  public SaleDocumentPosition description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public SaleDocumentPosition quantity(@javax.annotation.Nullable Double quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @javax.annotation.Nullable
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(@javax.annotation.Nullable Double quantity) {
    this.quantity = quantity;
  }


  public SaleDocumentPosition priceValuePLN(@javax.annotation.Nullable Double priceValuePLN) {
    this.priceValuePLN = priceValuePLN;
    return this;
  }

  /**
   * Get priceValuePLN
   * @return priceValuePLN
   */
  @javax.annotation.Nullable
  public Double getPriceValuePLN() {
    return priceValuePLN;
  }

  public void setPriceValuePLN(@javax.annotation.Nullable Double priceValuePLN) {
    this.priceValuePLN = priceValuePLN;
  }


  public SaleDocumentPosition priceValue(@javax.annotation.Nullable Double priceValue) {
    this.priceValue = priceValue;
    return this;
  }

  /**
   * Get priceValue
   * @return priceValue
   */
  @javax.annotation.Nullable
  public Double getPriceValue() {
    return priceValue;
  }

  public void setPriceValue(@javax.annotation.Nullable Double priceValue) {
    this.priceValue = priceValue;
  }


  public SaleDocumentPosition netValuePLN(@javax.annotation.Nullable Double netValuePLN) {
    this.netValuePLN = netValuePLN;
    return this;
  }

  /**
   * Get netValuePLN
   * @return netValuePLN
   */
  @javax.annotation.Nullable
  public Double getNetValuePLN() {
    return netValuePLN;
  }

  public void setNetValuePLN(@javax.annotation.Nullable Double netValuePLN) {
    this.netValuePLN = netValuePLN;
  }


  public SaleDocumentPosition netValue(@javax.annotation.Nullable Double netValue) {
    this.netValue = netValue;
    return this;
  }

  /**
   * Get netValue
   * @return netValue
   */
  @javax.annotation.Nullable
  public Double getNetValue() {
    return netValue;
  }

  public void setNetValue(@javax.annotation.Nullable Double netValue) {
    this.netValue = netValue;
  }


  public SaleDocumentPosition vatValuePLN(@javax.annotation.Nullable Double vatValuePLN) {
    this.vatValuePLN = vatValuePLN;
    return this;
  }

  /**
   * Get vatValuePLN
   * @return vatValuePLN
   */
  @javax.annotation.Nullable
  public Double getVatValuePLN() {
    return vatValuePLN;
  }

  public void setVatValuePLN(@javax.annotation.Nullable Double vatValuePLN) {
    this.vatValuePLN = vatValuePLN;
  }


  public SaleDocumentPosition grossValue(@javax.annotation.Nullable Double grossValue) {
    this.grossValue = grossValue;
    return this;
  }

  /**
   * Get grossValue
   * @return grossValue
   */
  @javax.annotation.Nullable
  public Double getGrossValue() {
    return grossValue;
  }

  public void setGrossValue(@javax.annotation.Nullable Double grossValue) {
    this.grossValue = grossValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleDocumentPosition saleDocumentPosition = (SaleDocumentPosition) o;
    return Objects.equals(this.productId, saleDocumentPosition.productId) &&
        Objects.equals(this.productCode, saleDocumentPosition.productCode) &&
        Objects.equals(this.description, saleDocumentPosition.description) &&
        Objects.equals(this.quantity, saleDocumentPosition.quantity) &&
        Objects.equals(this.priceValuePLN, saleDocumentPosition.priceValuePLN) &&
        Objects.equals(this.priceValue, saleDocumentPosition.priceValue) &&
        Objects.equals(this.netValuePLN, saleDocumentPosition.netValuePLN) &&
        Objects.equals(this.netValue, saleDocumentPosition.netValue) &&
        Objects.equals(this.vatValuePLN, saleDocumentPosition.vatValuePLN) &&
        Objects.equals(this.grossValue, saleDocumentPosition.grossValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, productCode, description, quantity, priceValuePLN, priceValue, netValuePLN, netValue, vatValuePLN, grossValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleDocumentPosition {\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    priceValuePLN: ").append(toIndentedString(priceValuePLN)).append("\n");
    sb.append("    priceValue: ").append(toIndentedString(priceValue)).append("\n");
    sb.append("    netValuePLN: ").append(toIndentedString(netValuePLN)).append("\n");
    sb.append("    netValue: ").append(toIndentedString(netValue)).append("\n");
    sb.append("    vatValuePLN: ").append(toIndentedString(vatValuePLN)).append("\n");
    sb.append("    grossValue: ").append(toIndentedString(grossValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ProductId");
    openapiFields.add("ProductCode");
    openapiFields.add("Description");
    openapiFields.add("Quantity");
    openapiFields.add("PriceValuePLN");
    openapiFields.add("PriceValue");
    openapiFields.add("NetValuePLN");
    openapiFields.add("NetValue");
    openapiFields.add("VatValuePLN");
    openapiFields.add("GrossValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SaleDocumentPosition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SaleDocumentPosition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaleDocumentPosition is not found in the empty JSON string", SaleDocumentPosition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SaleDocumentPosition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SaleDocumentPosition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ProductCode") != null && !jsonObj.get("ProductCode").isJsonNull()) && !jsonObj.get("ProductCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProductCode").toString()));
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaleDocumentPosition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaleDocumentPosition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaleDocumentPosition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaleDocumentPosition.class));

       return (TypeAdapter<T>) new TypeAdapter<SaleDocumentPosition>() {
           @Override
           public void write(JsonWriter out, SaleDocumentPosition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SaleDocumentPosition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SaleDocumentPosition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SaleDocumentPosition
   * @throws IOException if the JSON string is invalid with respect to SaleDocumentPosition
   */
  public static SaleDocumentPosition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaleDocumentPosition.class);
  }

  /**
   * Convert an instance of SaleDocumentPosition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

